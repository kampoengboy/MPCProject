{
  "name": "lockit-sendmail",
  "version": "1.1.0",
  "description": "utilities for all the email communication from lockit",
  "main": "index.js",
  "scripts": {
    "test": "grunt"
  },
  "author": {
    "name": "Mirco Zeiss",
    "email": "mirco.zeiss@gmail.com"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/zeMirco/lockit-sendmail"
  },
  "keywords": [
    "lockit",
    "sendmail",
    "send",
    "email"
  ],
  "dependencies": {
    "ejs": "^1.0.0",
    "nodemailer": "^1.3.0",
    "nodemailer-smtp-transport": "^0.1.13"
  },
  "devDependencies": {
    "grunt": "^0.4.5",
    "grunt-contrib-jshint": "^0.10.0",
    "grunt-mocha-test": "^0.12.0",
    "juice": "^0.5.0",
    "lockit-template-blank": "0.0.1",
    "mimelib": "^0.2.17",
    "mocha": "^1.21.4",
    "nodemailer-stub-transport": "^0.1.4",
    "should": "^4.0.4"
  },
  "readme": "# Lockit sendmail\n\n[![Build Status](https://travis-ci.org/zemirco/lockit-sendmail.svg?branch=v0.1.2)](https://travis-ci.org/zemirco/lockit-sendmail) [![NPM version](https://badge.fury.io/js/lockit-sendmail.svg)](http://badge.fury.io/js/lockit-sendmail)\n\nEmail utilities for [Lockit](https://github.com/zemirco/lockit).\n\n## Installation\n\n`npm install lockit-sendmail`\n\n```js\nvar Email = require('lockit-sendmail');\nvar config = require('./config.js');\n\nvar email = new Email(config);\n\nemail.signup('john', 'john@wayne.com', 'secret-token', function(err, res) {\n  // res is the same res you would get from nodemailer\n  // for more infos see https://github.com/andris9/Nodemailer#return-callback\n})\n```\n\n## Configuration\n\nAdd credentials to your `config.js`. This module uses `nodemailer` for sending emails. You can therefore\nuse the same email types and email settings.\n\n```js\nexports.emailType = 'SMTP';\nexports.emailSettings = {\n  service: 'Gmail',\n  auth: {\n    user: 'john.wayne@gmail.com',\n    pass: 'cowboy'\n  }\n};\n```\n\n## Methods\n\n - [verify email address on signup](#verify-email-address)\n - [notify on signup with duplicate email address](#duplicate-email-tries-to-sign-up)\n - [resend signup email for address verification](#send-email-address-verification-link-again)\n - [forgot password](#forgot-password-email)\n\n### Verify email address\n\nA new user has signed up and his email address needs to be verified.\nAn email with a link containing a unique token is sent to his email address.\nWhen the user clicks on this link we know that the given email address exists und belongs to the right user.\n\n```js\nemail.signup('john', 'john@wayne.com', 'abc-123-def', function(err, res) {\n  if (err) console.log(err);\n  // ...\n})\n```\n\nYou can configure the email's content through your `config.js`.\nJust modify the `emailSignup` object.\nHere is a sample setup.\n\n```js\nexports.emailSignup = {\n  subject: 'Welcome to <%- appname %>',\n  text: [\n    '<h2>Hello <%- username %></h2>',\n    'Welcome to <%- appname %>!',\n    '<p><%- link %> to complete your registration.</p>'\n  ].join(''),\n  linkText: 'Click here'\n};\n```\n\n - `subject` - the email's subject\n - `text` - the email's body\n - `linkText` - the text of the link, which points back to our app\n\n### Duplicate email tries to sign up\n\nA user tries to sign up with an email address that already exists.\nWe send a hint to the right owner to indicate this happening.\nNever expose to a user whether an email address exists or not.\n\n```js\nemail.taken('john', 'john@wayne.com', function(err, res) {\n  if (err) console.log(err);\n  // ...\n})\n```\n\nYou can configure the email's content through your `config.js`.\nJust modify the `emailSignupTaken` object.\nHere is a sample setup.\n\n```js\nexports.emailSignupTaken = {\n  subject: 'Email already registered',\n  text: [\n    '<h2>Hello <%- username %></h2>',\n    'you or someone else tried to sign up for <%- appname %>.',\n    '<p>Your email is already registered and you cannot sign up twice.',\n    ' If you haven\\'t tried to sign up, you can safely ignore this email. Everything is fine!</p>',\n    '<p>The <%- appname %> Team</p>'\n  ].join('')\n};\n```\n\n - `subject` - the email's subject\n - `text` - the email's body\n\n### Send email address verification link again\n\nA user signed up but lost or didn't receive the email containing the link for his email address verification.\nTherefore he should be able to send the link again, with a different verification token.\n\n```js\nemail.resend('john', 'john@wayne.com', 'abc-123-def', function(err, res) {\n  if (err) console.log(err);\n  // ...\n})\n```\n\nYou can configure the email's content through your `config.js`.\nJust modify the `emailResendVerification` object.\nHere is a sample setup.\n\n```js\nexports.emailResendVerification = {\n  subject: 'Complete your registration',\n  text: [\n    '<h2>Hello <%- username %></h2>',\n    'here is the link again. <%- link %> to complete your registration.',\n    '<p>The <%- appname %> Team</p>'\n  ].join(''),\n  linkText: 'Click here'\n};\n```\n\n - `subject` - the email's subject\n - `text` - the email's body\n - `linkText` - the text of the link, which points back to our app\n\n### Forgot password email\n\nA user has forgotten his password and would like to create a new one.\nHe enters his email address and an email with a link\ncontaining a secret token is sent to his email address.\n\n```js\nemail.forgot('john', 'john@wayne.com', 'abc-123-def', function(err, res) {\n  if (err) console.log(err);\n  // ...\n})\n```\n\nYou can configure the email's content through your `config.js`.\nJust modify the `emailForgotPassword` object.\nHere is a sample setup.\n\n```js\nexports.emailForgotPassword = {\n  subject: 'Reset your password',\n  text: [\n    '<h2>Hey <%- username %></h2>',\n    '<%- link %> to reset your password.',\n    '<p>The <%- appname %> Team</p>'\n  ].join(''),\n  linkText: 'Click here'\n};\n```\n\n - `subject` - the email's subject\n - `text` - the email's body\n - `linkText` - the text of the link, which points back to our app\n\n## Test\n\n`grunt`\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/zeMirco/lockit-sendmail/issues"
  },
  "homepage": "https://github.com/zeMirco/lockit-sendmail",
  "_id": "lockit-sendmail@1.1.0",
  "dist": {
    "shasum": "62d1fd7e9cc2cc549efed504db50f7799e99b776"
  },
  "_from": "lockit-sendmail@",
  "_resolved": "https://registry.npmjs.org/lockit-sendmail/-/lockit-sendmail-1.1.0.tgz"
}
